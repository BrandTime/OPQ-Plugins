2020/09/10 00:24:44.240 [E]  QQLuaVmRun CallGlobal err Unknow Lua Function:ReceiveEvents detail File weatherfy4a.lua when  call ReceiveEvents params [0] 1689236904  [1] &{661780072 0 ON_EVENT_GROUP_REVOKE 125251 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:2369500214 GroupID:661780072 MsgRandom:1822002991 MsgSeq:125251 UserID:2369500214]
2020/09/10 08:20:40.349 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137273 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2275389638 MsgSeq:137273 UserID:1689236904]
2020/09/10 08:20:43.191 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137275 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2629842902 MsgSeq:137275 UserID:1689236904]
2020/09/10 08:20:48.149 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137277 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:706410010 MsgSeq:137277 UserID:1689236904]
2020/09/10 08:21:03.761 [E]  QQLuaVmRun CallGlobal err Unknow Lua Function:ReceiveEvents detail File weatherfy4a.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137279 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:1120121922 MsgSeq:137279 UserID:1689236904]
2020/09/10 08:31:15.526 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137281 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:4156912826 MsgSeq:137281 UserID:1689236904]
2020/09/10 08:31:16.515 [E]  QQLuaVmRun CallGlobal err runtime error: invalid memory address or nil pointer dereference
stack traceback:
	[G]: in function 'Api_SendMsg'
	<string>:50: in main chunk
	[G]: ? detail File setugirls.lua when  call ReceiveGroupMsg params [0] 1689236904  [1] &{383770908 帝豪高級娛樂會所 1270198506 Master Tang 18妹子 TextMsg 1599697875 137291 1777884770 <nil>} 
2020/09/10 08:31:16.739 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137283 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:3552247312 MsgSeq:137283 UserID:1689236904]
2020/09/10 08:31:16.754 [E]  QQLuaVmRun CallGlobal err runtime error: invalid memory address or nil pointer dereference
stack traceback:
	[G]: in function 'Api_SendMsg'
	<string>:50: in main chunk
	[G]: ? detail File setugirls.lua when  call ReceiveGroupMsg params [0] 1689236904  [1] &{383770908 帝豪高級娛樂會所 1689236904 落伍机器人 18妹子 TextMsg 1599697876 137293 1599697875 <nil>} 
2020/09/10 08:31:46.835 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137294 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:4012921901 MsgSeq:137294 UserID:1689236904]
2020/09/10 08:31:47.021 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137295 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:1214631306 MsgSeq:137295 UserID:1689236904]
2020/09/10 08:31:47.030 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137296 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:4012921901 MsgSeq:137296 UserID:1689236904]
2020/09/10 08:31:50.783 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137298 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2357957232 MsgSeq:137298 UserID:1689236904]
2020/09/10 08:31:50.787 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137297 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:922078363 MsgSeq:137297 UserID:1689236904]
2020/09/10 08:31:52.597 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137299 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2841038891 MsgSeq:137299 UserID:1689236904]
2020/09/10 08:46:15.951 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137307 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:3480391112 MsgSeq:137307 UserID:1689236904]
2020/09/10 08:46:18.360 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137309 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:3587054587 MsgSeq:137309 UserID:1689236904]
2020/09/10 08:46:31.440 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137311 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2477692341 MsgSeq:137311 UserID:1689236904]
2020/09/10 08:46:36.450 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137313 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:3762331862 MsgSeq:137313 UserID:1689236904]
2020/09/10 08:46:48.682 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137315 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2539756184 MsgSeq:137315 UserID:1689236904]
2020/09/10 08:46:59.111 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137317 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:768518005 MsgSeq:137317 UserID:1689236904]
2020/09/10 08:47:26.816 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137322 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:4050483372 MsgSeq:137322 UserID:1689236904]
2020/09/10 08:47:35.543 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137324 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:4554931 MsgSeq:137324 UserID:1689236904]
2020/09/10 08:47:51.574 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137327 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2030861019 MsgSeq:137327 UserID:1689236904]
2020/09/10 08:48:07.710 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137331 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:3664432736 MsgSeq:137331 UserID:1689236904]
2020/09/10 08:48:18.088 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137333 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:3524348263 MsgSeq:137333 UserID:1689236904]
2020/09/10 08:48:27.324 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137335 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:335762456 MsgSeq:137335 UserID:1689236904]
2020/09/10 08:48:35.796 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137337 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:957670977 MsgSeq:137337 UserID:1689236904]
2020/09/10 08:48:41.776 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137339 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:378854626 MsgSeq:137339 UserID:1689236904]
2020/09/10 08:48:47.719 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137341 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2269503491 MsgSeq:137341 UserID:1689236904]
2020/09/10 08:49:00.611 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137344 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2576245530 MsgSeq:137344 UserID:1689236904]
2020/09/10 08:49:06.480 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137347 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2540332126 MsgSeq:137347 UserID:1689236904]
2020/09/10 08:49:16.078 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137349 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:400552037 MsgSeq:137349 UserID:1689236904]
2020/09/10 08:49:33.696 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137352 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:3701389162 MsgSeq:137352 UserID:1689236904]
2020/09/10 08:49:45.998 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137354 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2744107300 MsgSeq:137354 UserID:1689236904]
2020/09/10 08:50:02.702 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137356 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:87607244 MsgSeq:137356 UserID:1689236904]
2020/09/10 08:50:17.463 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137358 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2786070004 MsgSeq:137358 UserID:1689236904]
2020/09/10 09:45:56.062 [E]  QQLuaVmRun CallGlobal err runtime error: invalid memory address or nil pointer dereference
stack traceback:
	[G]: in function 'Api_SendMsg'
	<string>:23: in main chunk
	[G]: ? detail File setucomic.lua when  call ReceiveGroupMsg params [0] 1689236904  [1] &{581168848 Diamond事务所·伍·楼 1192067795 Lσgeγ 涩图 TextMsg 1599702355 542094 2367690745 <nil>} 
2020/09/10 10:25:21.601 [E]  QQLuaVmRun CallGlobal err json:151: unexpected character '<' at line 1 col 1
stack traceback:
	[G]: in function 'error'
	json:151: in function 'decode_error'
	json:327: in function 'parse'
	json:333: in function 'decode'
	<string>:494: in function 'Sousuo'
	<string>:167: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveGroupMsg params [0] 1689236904  [1] &{581168848 Diamond事务所·伍·楼 451527740 无颜不咸 我想看怎么被打的 TextMsg 1599704721 542229 965562903 <nil>} 
2020/09/10 10:48:00.919 [E]  QQLuaVmRun CallGlobal err <string>:349: invalid ')' at 687
stack traceback:
	[G]: in function 'find'
	<string>:349: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveGroupMsg params [0] 1689236904  [1] &{928308961 大 洗 女 子 学 园 2369500214 雷电芽衣 {"Content":"=====================\n- HoshinoBot使用说明 -\n=====================\n发送方括号[]内的关键词即可触发\n※功能采取模块化管理，群管理可控制开关\n\n[!帮助] 会战管理v2\n[怎么拆日和] 竞技场查询\n[星乃来发十连] 转蛋模拟\n[pcr速查] 常用网址\n[官漫132] 四格漫画（日）\n[切噜一下] 切噜语转换\n[lssv] 查看功能模块的开关状态（群管理限定）\n[来杯咖啡] 联系维护组\n\n发送以下关键词查看更多：\n[帮助pcr会战]\n[帮助pcr查询]\n[帮助pcr娱乐]\n[帮助pcr订阅]\n[帮助kancolle]\n[帮助通用]\n========\n※除这里中写明外 另有其他隐藏功能:)\n※隐藏功能属于赠品 不保证可用性\n※本bot开源，可自行搭建\n※服务器运行及开发维护需要成本，赞助支持请私戳作者\n※您的支持是本bot更新维护的动力\n※※调教时请注意使用频率，您的滥用可能会导致bot账号被封禁","UserID":[2919344642]} AtMsg 1599706080 531603 2105843246 <nil>} 
2020/09/10 12:19:49.148 [E]  QQLuaVmRun CallGlobal err <string>:397: attempt to index a non-table object(nil) with key 'text'
stack traceback:
	<string>:397: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveGroupMsg params [0] 1689236904  [1] &{581168848 Diamond事务所·伍·楼 1216803182 想和更科麻美结婚的樱泽千鹤 送水原给朋友那个？ TextMsg 1599711587 542528 1870369091 <nil>} 
2020/09/10 12:55:37.467 [E]  QQLuaVmRun CallGlobal err <string>:349: unfinished capture at EOS
stack traceback:
	[G]: in function 'find'
	<string>:349: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveGroupMsg params [0] 1689236904  [1] &{928308961 大 洗 女 子 学 园 2741292486 da 我以为他是律者 其实是献祭(悲 TextMsg 1599713737 531626 170577781 <nil>} 
2020/09/10 15:17:56.563 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137370 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2913548587 MsgSeq:137370 UserID:1689236904]
2020/09/10 15:19:42.272 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137373 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:3246040527 MsgSeq:137373 UserID:1689236904]
2020/09/10 15:19:48.319 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137376 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:619425904 MsgSeq:137376 UserID:1689236904]
2020/09/10 15:21:30.735 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137380 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:4215532246 MsgSeq:137380 UserID:1689236904]
2020/09/10 15:21:35.374 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137382 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2490936132 MsgSeq:137382 UserID:1689236904]
2020/09/10 15:21:39.327 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137384 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2348702762 MsgSeq:137384 UserID:1689236904]
2020/09/10 15:21:44.231 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137387 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:3253365102 MsgSeq:137387 UserID:1689236904]
2020/09/10 15:21:44.616 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137388 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2358227659 MsgSeq:137388 UserID:1689236904]
2020/09/10 15:26:43.944 [E]  QQLuaVmRun CallGlobal err <string>:309: attempt to call a non-function object
stack traceback:
	<string>:309: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveGroupMsg params [0] 1689236904  [1] &{581168848 Diamond事务所·伍·楼 510190902 迪亚瓦尔 {"Content":"[闪照]请使用新版手机QQ查看闪照。","FileId":2972696394,"FileMd5":"MA3O4duVh9SF8nWGCskDNw==","FileSize":177708,"ForwordBuf":"CAMSkQEKjgESJDMwMERDRUUxREI5NTg3RDQ4NUYyNzU4NjBBQzkwMzM3LmpwZzjK/r6JC0D5uMWdCkhQUEJaEFFxUWVSakthY3o5OXNlTkdgAWoQMA3O4duVh9SF8nWGCskDN4gBAKAB6wewAfcGuAGAD8AByAHIAazsCtABAOgB/5kD8AG/hgeSAgoIABAAMgBQAHgG","ForwordField":53,"Tips":"[群消息-QQ闪照]","Url":"http://gchat.qpic.cn/gchatpic_new/510190902/581168848-2534335053-300DCEE1DB9587D485F275860AC90337/0?vuin=1689236904\u0026term=255\u0026pictype=0"} PicMsg 1599722803 543709 1777977040 <nil>} 
2020/09/10 15:27:33.595 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137391 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2467373865 MsgSeq:137391 UserID:1689236904]
2020/09/10 15:27:44.732 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137394 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2160879373 MsgSeq:137394 UserID:1689236904]
2020/09/10 15:28:43.021 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137397 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:1619758604 MsgSeq:137397 UserID:1689236904]
2020/09/10 15:28:47.920 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137398 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:1145555920 MsgSeq:137398 UserID:1689236904]
2020/09/10 15:29:09.098 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137400 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2903134150 MsgSeq:137400 UserID:1689236904]
2020/09/10 15:29:14.725 [E]  QQLuaVmRun CallGlobal err Unknow Lua Function:ReceiveEvents detail File weatherfy4a.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137402 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:1903975135 MsgSeq:137402 UserID:1689236904]
2020/09/10 15:30:39.464 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137404 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2506801941 MsgSeq:137404 UserID:1689236904]
2020/09/10 15:30:46.548 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137406 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:614893673 MsgSeq:137406 UserID:1689236904]
2020/09/10 15:30:52.711 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137408 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:3268856586 MsgSeq:137408 UserID:1689236904]
2020/09/10 15:31:29.127 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137412 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:3497842752 MsgSeq:137412 UserID:1689236904]
2020/09/10 15:31:34.421 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137414 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:911812099 MsgSeq:137414 UserID:1689236904]
2020/09/10 15:31:34.711 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137415 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:138321761 MsgSeq:137415 UserID:1689236904]
2020/09/10 15:31:36.084 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137417 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:960779326 MsgSeq:137417 UserID:1689236904]
2020/09/10 15:31:38.661 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137419 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:1823810503 MsgSeq:137419 UserID:1689236904]
2020/09/10 15:31:40.762 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137421 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2444206594 MsgSeq:137421 UserID:1689236904]
2020/09/10 15:54:07.807 [E]  QQLuaVmRun CallGlobal err <string>:349: unexpected EOS at 1023
stack traceback:
	[G]: in function 'find'
	<string>:349: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveGroupMsg params [0] 1689236904  [1] &{928308961 大 洗 女 子 学 园 1296176321 冰箱 {"Content":"\u003c?xml version='1.0' encoding='UTF-8' standalone='yes' ?\u003e\u003cmsg serviceID=\"35\" templateID=\"-1\" action=\"viewMultiMsg\" brief=\"[聊天记录]\" m_resid=\"rwLXTb2zIQCUv483590CO6ChBVEar4jiY3bJps6VNl1fq00LpNGQ3qktyaeZCnqA\" m_fileName=\"6870764174874316569\" tSum=\"1\" m_fileSize=\"2526\" sourceMsgId=\"0\" url=\"\" flag=\"3\" adverSign=\"0\" multiMsgFlag=\"0\"\u003e\u003citem layout=\"1\" advertiser_id=\"0\" aid=\"0\"\u003e\u003ctitle size=\"34\" color=\"#000000\" maxLines=\"2\" lineSpace=\"12\"\u003e群聊的聊天记录\u003c/title\u003e\u003ctitle size=\"26\" color=\"#777777\" maxLines=\"2\" lineSpace=\"12\"\u003e群冠状病毒噬毒体: 牛的[图片][图片][图片][图片][图片][图片][图片][图片][图片][...\u003c/title\u003e\u003chr hidden=\"false\" style=\"0\" /\u003e\u003csummary size=\"26\" color=\"#808080\"\u003e查看1条转发消息\u003c/summary\u003e\u003c/item\u003e\u003csource name=\"聊天记录\" icon=\"\" action=\"\" appid=\"0\" /\u003e\u003c/msg\u003e"} XmlMsg 1599724447 531658 46160734 <nil>} 
2020/09/10 16:52:51.380 [E]  setulolicon.lua
2020/09/10 16:52:51.383 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if (string.find(data.Content, "18涩图") ~= 1 then
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 16:52:56.355 [E]  setulolicon.lua
2020/09/10 16:52:56.355 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if (string.find(data.Content, "18涩图") ~= 1 then
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:18:07.695 [E]  setulolicon.lua
2020/09/10 17:18:07.695 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    f data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:20:23.406 [E]  setulolicon.lua
2020/09/10 17:20:23.407 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    f data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:21:58.246 [E]  setulolicon.lua
2020/09/10 17:21:58.248 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    f data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:28:19.850 [E]  setulolicon.lua
2020/09/10 17:28:19.850 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end


    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )


function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:34:40.247 [E]  setulolicon.lua
2020/09/10 17:34:40.248 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:34:41.153 [E]  setulolicon.lua
2020/09/10 17:34:41.154 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:34:55.557 [E]  setulolicon.lua
2020/09/10 17:34:55.557 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:34:56.328 [E]  setulolicon.lua
2020/09/10 17:34:56.328 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:34:59.785 [E]  setulolicon.lua
2020/09/10 17:34:59.785 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:35:08.353 [E]  setulolicon.lua
2020/09/10 17:35:08.353 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:35:15.441 [E]  setulolicon.lua
2020/09/10 17:35:15.441 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:35:21.136 [E]  setulolicon.lua
2020/09/10 17:35:21.136 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:35:21.322 [E]  setulolicon.lua
2020/09/10 17:35:21.322 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:35:25.022 [E]  setulolicon.lua
2020/09/10 17:35:25.022 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:35:51.976 [E]  setulolicon.lua
2020/09/10 17:35:51.982 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:35:58.667 [E]  setulolicon.lua
2020/09/10 17:35:58.667 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:36:01.561 [E]  setulolicon.lua
2020/09/10 17:36:01.563 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:36:20.535 [E]  setulolicon.lua
2020/09/10 17:36:20.535 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:36:22.354 [E]  setulolicon.lua
2020/09/10 17:36:22.356 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:36:25.005 [E]  setulolicon.lua
2020/09/10 17:36:25.005 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:36:27.488 [E]  setulolicon.lua
2020/09/10 17:36:27.489 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:36:27.554 [E]  setulolicon.lua
2020/09/10 17:36:27.554 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:36:31.778 [E]  setulolicon.lua
2020/09/10 17:36:31.778 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:37:04.685 [E]  setulolicon.lua
2020/09/10 17:37:04.685 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:37:08.995 [E]  setulolicon.lua
2020/09/10 17:37:08.995 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:37:56.876 [E]  setulolicon.lua
2020/09/10 17:37:56.876 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:37:58.790 [E]  setulolicon.lua
2020/09/10 17:37:58.790 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:38:15.781 [E]  setulolicon.lua
2020/09/10 17:38:15.781 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:38:25.409 [E]  setulolicon.lua
2020/09/10 17:38:25.416 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:38:46.788 [E]  setulolicon.lua
2020/09/10 17:38:46.788 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:38:47.499 [E]  setulolicon.lua
2020/09/10 17:38:47.499 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:39:17.189 [E]  setulolicon.lua
2020/09/10 17:39:17.189 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:40:01.131 [E]  setulolicon.lua
2020/09/10 17:40:01.138 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
        local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:43:25.083 [E]  setulolicon.lua
2020/09/10 17:43:25.085 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:43:45.781 [E]  setulolicon.lua
2020/09/10 17:43:45.783 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:44:12.585 [E]  setulolicon.lua
2020/09/10 17:44:12.589 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:44:13.085 [E]  setulolicon.lua
2020/09/10 17:44:13.085 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:44:16.221 [E]  setulolicon.lua
2020/09/10 17:44:16.221 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:45:05.738 [E]  setulolicon.lua
2020/09/10 17:45:05.738 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:45:10.243 [E]  setulolicon.lua
2020/09/10 17:45:10.249 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    return 1
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:45:32.580 [E]  setulolicon.lua
2020/09/10 17:45:32.587 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end

end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:45:44.329 [E]  setulolicon.lua
2020/09/10 17:45:44.329 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end

end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:45:48.805 [E]  setulolicon.lua
2020/09/10 17:45:48.805 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end

end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:46:05.429 [E]  setulolicon.lua
2020/09/10 17:46:05.430 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end

end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:46:07.257 [E]  setulolicon.lua
2020/09/10 17:46:07.258 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end

end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:46:19.099 [E]  setulolicon.lua
2020/09/10 17:46:19.099 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end

end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:47:17.727 [E]  setulolicon.lua
2020/09/10 17:47:17.728 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end

end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:47:17.949 [E]  setulolicon.lua
2020/09/10 17:47:17.949 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end

end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:47:29.179 [E]  setulolicon.lua
2020/09/10 17:47:29.179 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end

end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:47:41.259 [E]  setulolicon.lua
2020/09/10 17:47:41.259 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end

end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = "30s自动撤回",
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:47:48.800 [E]  setulolicon.lua
2020/09/10 17:47:48.800 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end

end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:48:12.263 [E]  setulolicon.lua
2020/09/10 17:48:12.263 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end

end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:48:27.666 [E]  setulolicon.lua
2020/09/10 17:48:27.666 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end

end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:48:57.449 [E]  setulolicon.lua
2020/09/10 17:48:57.449 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end

end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:49:04.227 [E]  setulolicon.lua
2020/09/10 17:49:04.228 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end

end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:49:51.068 [E]  setulolicon.lua
2020/09/10 17:49:51.068 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end

end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:51:08.070 [E]  setulolicon.lua
2020/09/10 17:51:08.070 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end

end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:51:16.076 [E]  setulolicon.lua
2020/09/10 17:51:16.079 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end

end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:51:30.576 [E]  setulolicon.lua
2020/09/10 17:51:30.576 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    

    
    if data.Content == '来份涩图' then 
        return 1
    end

end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:52:09.204 [E]  setulolicon.lua
2020/09/10 17:52:09.216 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 17:57:49.382 [E]  setulolicon.lua
2020/09/10 17:57:49.382 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:00:41.928 [E]  setulolicon.lua
2020/09/10 18:00:41.928 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:00:42.727 [E]  setulolicon.lua
2020/09/10 18:00:42.728 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:01:34.081 [E]  setulolicon.lua
2020/09/10 18:01:34.081 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:01:45.617 [E]  setulolicon.lua
2020/09/10 18:01:45.617 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:01:59.691 [E]  setulolicon.lua
2020/09/10 18:01:59.691 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:02:01.984 [E]  setulolicon.lua
2020/09/10 18:02:01.984 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:03:03.770 [E]  setulolicon.lua
2020/09/10 18:03:03.770 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:03:05.762 [E]  setulolicon.lua
2020/09/10 18:03:05.762 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:03:10.421 [E]  setulolicon.lua
2020/09/10 18:03:10.421 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:03:32.658 [E]  setulolicon.lua
2020/09/10 18:03:32.664 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:04:11.127 [E]  setulolicon.lua
2020/09/10 18:04:11.127 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:04:16.062 [E]  setulolicon.lua
2020/09/10 18:04:16.073 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:04:27.601 [E]  setulolicon.lua
2020/09/10 18:04:27.603 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:05:02.291 [E]  setulolicon.lua
2020/09/10 18:05:02.291 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:05:05.970 [E]  setulolicon.lua
2020/09/10 18:05:05.977 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:05:15.502 [E]  setulolicon.lua
2020/09/10 18:05:15.503 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:05:24.075 [E]  setulolicon.lua
2020/09/10 18:05:24.080 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:05:53.579 [E]  setulolicon.lua
2020/09/10 18:05:53.579 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:07:06.583 [E]  setulolicon.lua
2020/09/10 18:07:06.583 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:08:39.390 [E]  setulolicon.lua
2020/09/10 18:08:39.391 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:08:45.590 [E]  setulolicon.lua
2020/09/10 18:08:45.591 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:10:02.004 [E]  setulolicon.lua
2020/09/10 18:10:02.004 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:10:14.926 [E]  setulolicon.lua
2020/09/10 18:10:14.941 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:10:18.265 [E]  setulolicon.lua
2020/09/10 18:10:18.265 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:10:38.298 [E]  setulolicon.lua
2020/09/10 18:10:38.298 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:10:49.751 [E]  setulolicon.lua
2020/09/10 18:10:49.756 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:10:58.901 [E]  setulolicon.lua
2020/09/10 18:10:58.901 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:11:00.896 [E]  setulolicon.lua
2020/09/10 18:11:00.898 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:11:13.619 [E]  setulolicon.lua
2020/09/10 18:11:13.621 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:11:20.354 [E]  setulolicon.lua
2020/09/10 18:11:20.354 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:11:21.275 [E]  setulolicon.lua
2020/09/10 18:11:21.276 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:11:23.662 [E]  setulolicon.lua
2020/09/10 18:11:23.662 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:11:25.619 [E]  setulolicon.lua
2020/09/10 18:11:25.619 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:11:30.421 [E]  setulolicon.lua
2020/09/10 18:11:30.428 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:11:37.630 [E]  setulolicon.lua
2020/09/10 18:11:37.632 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:11:39.671 [E]  setulolicon.lua
2020/09/10 18:11:39.672 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:11:40.009 [E]  setulolicon.lua
2020/09/10 18:11:40.013 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:11:51.240 [E]  setulolicon.lua
2020/09/10 18:11:51.240 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:11:51.481 [E]  setulolicon.lua
2020/09/10 18:11:51.481 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:11:54.201 [E]  setulolicon.lua
2020/09/10 18:11:54.202 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:11:58.318 [E]  setulolicon.lua
2020/09/10 18:11:58.326 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:12:00.128 [E]  setulolicon.lua
2020/09/10 18:12:00.128 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:12:08.724 [E]  setulolicon.lua
2020/09/10 18:12:08.724 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:12:11.883 [E]  setulolicon.lua
2020/09/10 18:12:11.884 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:12:23.571 [E]  setulolicon.lua
2020/09/10 18:12:23.574 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:12:26.870 [E]  setulolicon.lua
2020/09/10 18:12:26.870 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:12:28.897 [E]  setulolicon.lua
2020/09/10 18:12:28.897 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:12:37.997 [E]  setulolicon.lua
2020/09/10 18:12:37.997 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:13:36.283 [E]  setulolicon.lua
2020/09/10 18:13:36.300 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:13:42.438 [E]  setulolicon.lua
2020/09/10 18:13:42.438 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:13:46.592 [E]  setulolicon.lua
2020/09/10 18:13:46.592 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:14:02.095 [E]  setulolicon.lua
2020/09/10 18:14:02.095 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:14:07.080 [E]  setulolicon.lua
2020/09/10 18:14:07.080 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:14:10.668 [E]  setulolicon.lua
2020/09/10 18:14:10.668 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:14:11.880 [E]  setulolicon.lua
2020/09/10 18:14:11.883 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:14:14.391 [E]  setulolicon.lua
2020/09/10 18:14:14.391 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:14:23.070 [E]  setulolicon.lua
2020/09/10 18:14:23.070 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:14:33.785 [E]  setulolicon.lua
2020/09/10 18:14:33.785 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:15:09.548 [E]  setulolicon.lua
2020/09/10 18:15:09.549 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:15:19.035 [E]  setulolicon.lua
2020/09/10 18:15:19.035 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:15:49.814 [E]  setulolicon.lua
2020/09/10 18:15:49.814 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:16:33.397 [E]  setulolicon.lua
2020/09/10 18:16:33.397 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:17:18.932 [E]  setulolicon.lua
2020/09/10 18:17:18.932 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:17:48.466 [E]  setulolicon.lua
2020/09/10 18:17:48.467 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:17:54.675 [E]  setulolicon.lua
2020/09/10 18:17:54.678 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:17:54.809 [E]  setulolicon.lua
2020/09/10 18:17:54.814 [E]  local log = require("log")
local Api = require("coreApi")
local json = require("json")
local http = require("http")

local whitelist = { 959562190 } -- 只有白名单里的群中可以使用r18指令

local function contains(table, val)
   for i = 1, #table do
      if table[i] == val then 
         return true
      end
   end
   return false
end

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '来份18涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu

    
    if data.Content == '来份涩图' then 
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
    setu18
end

function setu
    local idx = math.random(0, 95) -- 有效的索引从0000 ~ 0095
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end    

function setu18
    local idx = math.random(0, 20) -- 有效的索引从0000 ~ 0020
    idx = string.format('%04d', idx) -- 前面填充0,
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/setu_r18_" .. idx .. ".js" -- 索引文件地址
    log.info("url=%s", url)
    local resp = http.request("GET", url).body
    idx = string.find(resp, "(", 1, true)
    resp = string.sub(resp, idx + 1, -2) -- 去掉前面的setu_xxxx(和后面的)
    resp = json.decode(resp)
    local item = resp[math.random(#resp)] -- 从数组中随机选取一个元素
    local url = "https://cdn.jsdelivr.net/gh/ipchi9012/setu_pics@latest/" .. item.path
    local text = "『" .. item.title .. "』 作者：" .. item.author .. "\n原图：" .. item.url
    log.info("url=%s, text=%s", url, text)
    ApiRet = Api.Api_SendMsg(
        CurrentQQ,
        {
            toUser = data.FromGroupId,
            sendToType = 2,
            sendMsgType = "PicMsg", 
            groupid = 0,
            content = text,
            picUrl = url,
            atUser = 0
        }
    )
    return 1
end
    
function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end
2020/09/10 18:43:20.495 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137435 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:3920876939 MsgSeq:137435 UserID:1689236904]
2020/09/10 18:44:22.756 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137437 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:137241933 MsgSeq:137437 UserID:1689236904]
2020/09/10 20:22:00.104 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137481 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:100606158 MsgSeq:137481 UserID:1689236904]
2020/09/10 20:29:50.964 [E]  QQLuaVmRun CallGlobal err runtime error: invalid memory address or nil pointer dereference
stack traceback:
	[G]: in function 'Api_SendMsg'
	<string>:23: in main chunk
	[G]: ? detail File setugirls.lua when  call ReceiveGroupMsg params [0] 1689236904  [1] &{581168848 Diamond事务所·伍·楼 2450459910 凤飞翱翔兮丷 妹子 TextMsg 1599740990 544686 3203301467 <nil>} 
2020/09/10 20:57:37.342 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137499 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:3710675523 MsgSeq:137499 UserID:1689236904]
2020/09/10 20:57:47.344 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137500 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:1445184074 MsgSeq:137500 UserID:1689236904]
2020/09/10 20:58:01.731 [E]  QQLuaVmRun CallGlobal err <string>:999: attempt to index a non-table object(nil) with key 'GroupID'
stack traceback:
	<string>:999: in function 'CheHui'
	<string>:417: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveEvents params [0] 1689236904  [1] &{383770908 0 ON_EVENT_GROUP_REVOKE 137501 群成员撤回消息事件 <nil>}  [2] map[AdminUserID:1689236904 GroupID:383770908 MsgRandom:2865859135 MsgSeq:137501 UserID:1689236904]
2020/09/10 21:10:53.095 [E]  QQLuaVmRun CallGlobal err <string>:42: cannot perform concat operation between string and nil
stack traceback:
	<string>:42: in function 'baike'
	<string>:12: in main chunk
	[G]: ? detail File baike2.lua when  call ReceiveGroupMsg params [0] 1689236904  [1] &{959562190 测试群 1689236904 凤飞翱翔兮丷 1.看图命令有：
漫画、插画、随机、首页、周排行、cos、私服、cos周排行、cos月排行、私服排行、少前、来点色图（Loli）。
2.QQ音乐：点歌+歌名歌手、VIP歌曲-->听歌+歌名歌手
3.搜图+图片
4.搜番+图片
5.佛系语录
6.土味情话
7.网易云热评
8.舔狗日记
9.壁纸：bz
10.明日方舟美图：明日方舟
11.项目地址：.gayhub
12.百度百科：百科+内容
13.翻译：翻译+外文
14.翻译为英语：翻英+中文
 TextMsg 1599743452 6827 1599743452 <nil>} 
2020/09/10 22:20:02.947 [E]  QQLuaVmRun CallGlobal err <string>:16: attempt to call a non-function object
stack traceback:
	<string>:16: in main chunk
	[G]: ? detail File setutnl.lua when  call ReceiveGroupMsg params [0] 1689236904  [1] &{959562190 测试群 2450459910 凤飞翱翔兮丷 涩图啊 TextMsg 1599747602 6828 1153645492 <nil>} 
2020/09/10 22:21:30.261 [E]  setutnl.lua
2020/09/10 22:21:30.261 [E]  -- pix 动漫图
local api = require("coreApi")
local http = require("http")

local whitelist = { 959562190,
    383770908,
    581168848,
} -- 只有白名单里的群中可以使用色图指令

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '涩图啊' then
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
       api.Api_SendMsg(
           CurrentQQ,
            {
              toUser = data.FromGroupId,
              sendToType = 2,
              sendMsgType = "PicMsg",
              content = "30s自动撤回",
              groupid = 0,
              atUser = 0,
              picUrl = "https://uploadbeta.com/api/pictures/random/?key=%E6%8E%A8%E5%A5%B3%E9%83%8E",
              picBase64Buf = "",
              fileMd5 = ""
            }
       )
    end
    if data.Content == '涩图啊' then
       api.Api_SendMsg(
           CurrentQQ,
            {
              toUser = data.FromGroupId,
              sendToType = 2,
              sendMsgType = "PicMsg",
              content = "30s自动撤回",
              groupid = 0,
              atUser = 0,
              picUrl = "http://116.62.167.164:8080/xxoo",
              picBase64Buf = "",
              fileMd5 = ""
            }
	   )
    end
    return 1
end

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end

2020/09/10 22:21:55.992 [E]  setutnl.lua
2020/09/10 22:21:55.992 [E]  -- pix 动漫图
local api = require("coreApi")
local http = require("http")

local whitelist = { 959562190,
    383770908,
    581168848,
} -- 只有白名单里的群中可以使用色图指令

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '涩图啊' then
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
       api.Api_SendMsg(
           CurrentQQ,
            {
              toUser = data.FromGroupId,
              sendToType = 2,
              sendMsgType = "PicMsg",
              content = "30s自动撤回",
              groupid = 0,
              atUser = 0,
              picUrl = "https://uploadbeta.com/api/pictures/random/?key=%E6%8E%A8%E5%A5%B3%E9%83%8E",
              picBase64Buf = "",
              fileMd5 = ""
            }
       )
    end
    if data.Content == '涩图啊' then
       api.Api_SendMsg(
           CurrentQQ,
            {
              toUser = data.FromGroupId,
              sendToType = 2,
              sendMsgType = "PicMsg",
              content = "30s自动撤回",
              groupid = 0,
              atUser = 0,
              picUrl = "http://116.62.167.164:8080/xxoo",
              picBase64Buf = "",
              fileMd5 = ""
            }
	   )
    end
    return 1
end

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end

2020/09/10 22:23:55.660 [E]  setutnl.lua
2020/09/10 22:23:55.660 [E]  -- pix 动漫图
local api = require("coreApi")
local http = require("http")

local whitelist = { 959562190,
    383770908,
    581168848,
} -- 只有白名单里的群中可以使用色图指令

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '涩图啊' then
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
       api.Api_SendMsg(
           CurrentQQ,
            {
              toUser = data.FromGroupId,
              sendToType = 2,
              sendMsgType = "PicMsg",
              content = "30s自动撤回",
              groupid = 0,
              atUser = 0,
              picUrl = "https://uploadbeta.com/api/pictures/random/?key=%E6%8E%A8%E5%A5%B3%E9%83%8E",
              picBase64Buf = "",
              fileMd5 = ""
            }
       )
    end
    if data.Content == '涩图啊' then
       api.Api_SendMsg(
           CurrentQQ,
            {
              toUser = data.FromGroupId,
              sendToType = 2,
              sendMsgType = "PicMsg",
              content = "30s自动撤回",
              groupid = 0,
              atUser = 0,
              picUrl = "http://116.62.167.164:8080/xxoo",
              picBase64Buf = "",
              fileMd5 = ""
            }
	   )
    end
    return 1
end

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end

2020/09/10 22:24:34.620 [E]  setutnl.lua
2020/09/10 22:24:34.620 [E]  -- pix 动漫图
local api = require("coreApi")
local http = require("http")

local whitelist = { 959562190,
    383770908,
    581168848,
} -- 只有白名单里的群中可以使用色图指令

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '涩图啊' then
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
       api.Api_SendMsg(
           CurrentQQ,
            {
              toUser = data.FromGroupId,
              sendToType = 2,
              sendMsgType = "PicMsg",
              content = "30s自动撤回",
              groupid = 0,
              atUser = 0,
              picUrl = "https://uploadbeta.com/api/pictures/random/?key=%E6%8E%A8%E5%A5%B3%E9%83%8E",
              picBase64Buf = "",
              fileMd5 = ""
            }
       )
    end
    if data.Content == '涩图啊' then
       api.Api_SendMsg(
           CurrentQQ,
            {
              toUser = data.FromGroupId,
              sendToType = 2,
              sendMsgType = "PicMsg",
              content = "30s自动撤回",
              groupid = 0,
              atUser = 0,
              picUrl = "http://116.62.167.164:8080/xxoo",
              picBase64Buf = "",
              fileMd5 = ""
            }
	   )
    end
    return 1
end

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end

2020/09/10 22:24:36.024 [E]  setutnl.lua
2020/09/10 22:24:36.057 [E]  -- pix 动漫图
local api = require("coreApi")
local http = require("http")

local whitelist = { 959562190,
    383770908,
    581168848,
} -- 只有白名单里的群中可以使用色图指令

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '涩图啊' then
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
       api.Api_SendMsg(
           CurrentQQ,
            {
              toUser = data.FromGroupId,
              sendToType = 2,
              sendMsgType = "PicMsg",
              content = "30s自动撤回",
              groupid = 0,
              atUser = 0,
              picUrl = "https://uploadbeta.com/api/pictures/random/?key=%E6%8E%A8%E5%A5%B3%E9%83%8E",
              picBase64Buf = "",
              fileMd5 = ""
            }
       )
    end
    if data.Content == '涩图啊' then
       api.Api_SendMsg(
           CurrentQQ,
            {
              toUser = data.FromGroupId,
              sendToType = 2,
              sendMsgType = "PicMsg",
              content = "30s自动撤回",
              groupid = 0,
              atUser = 0,
              picUrl = "http://116.62.167.164:8080/xxoo",
              picBase64Buf = "",
              fileMd5 = ""
            }
	   )
    end
    return 1
end

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end

2020/09/10 22:28:39.010 [E]  setutnl.lua
2020/09/10 22:28:39.010 [E]  -- pix 动漫图
local api = require("coreApi")
local http = require("http")

local whitelist = { 959562190,
    383770908,
    581168848,
} -- 只有白名单里的群中可以使用色图指令

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '涩图啊' then
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
       api.Api_SendMsg(
           CurrentQQ,
            {
              toUser = data.FromGroupId,
              sendToType = 2,
              sendMsgType = "PicMsg",
              content = "30s自动撤回",
              groupid = 0,
              atUser = 0,
              picUrl = "https://uploadbeta.com/api/pictures/random/?key=%E6%8E%A8%E5%A5%B3%E9%83%8E",
              picBase64Buf = "",
              fileMd5 = ""
            }
       )
    end
    if data.Content == '涩图啊' then
       api.Api_SendMsg(
           CurrentQQ,
            {
              toUser = data.FromGroupId,
              sendToType = 2,
              sendMsgType = "PicMsg",
              content = "30s自动撤回",
              groupid = 0,
              atUser = 0,
              picUrl = "http://116.62.167.164:8080/xxoo",
              picBase64Buf = "",
              fileMd5 = ""
            }
	   )
    end
    return 1
end

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end

2020/09/10 22:29:05.103 [E]  setutnl.lua
2020/09/10 22:29:05.104 [E]  -- pix 动漫图
local api = require("coreApi")
local http = require("http")

local whitelist = { 959562190,
    383770908,
    581168848,
} -- 只有白名单里的群中可以使用色图指令

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '涩图啊' then
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
       api.Api_SendMsg(
           CurrentQQ,
            {
              toUser = data.FromGroupId,
              sendToType = 2,
              sendMsgType = "PicMsg",
              content = "30s自动撤回",
              groupid = 0,
              atUser = 0,
              picUrl = "https://uploadbeta.com/api/pictures/random/?key=%E6%8E%A8%E5%A5%B3%E9%83%8E",
              picBase64Buf = "",
              fileMd5 = ""
            }
       )
    end
    if data.Content == '涩图啊' then
       api.Api_SendMsg(
           CurrentQQ,
            {
              toUser = data.FromGroupId,
              sendToType = 2,
              sendMsgType = "PicMsg",
              content = "30s自动撤回",
              groupid = 0,
              atUser = 0,
              picUrl = "http://116.62.167.164:8080/xxoo",
              picBase64Buf = "",
              fileMd5 = ""
            }
	   )
    end
    return 1
end

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end

2020/09/10 22:29:22.333 [E]  setutnl.lua
2020/09/10 22:29:22.333 [E]  -- pix 动漫图
local api = require("coreApi")
local http = require("http")

local whitelist = { 959562190,
    383770908,
    581168848,
} -- 只有白名单里的群中可以使用色图指令

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '涩图啊' then
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
       api.Api_SendMsg(
           CurrentQQ,
            {
              toUser = data.FromGroupId,
              sendToType = 2,
              sendMsgType = "PicMsg",
              content = "30s自动撤回",
              groupid = 0,
              atUser = 0,
              picUrl = "https://uploadbeta.com/api/pictures/random/?key=%E6%8E%A8%E5%A5%B3%E9%83%8E",
              picBase64Buf = "",
              fileMd5 = ""
            }
       )
    end
    if data.Content == '涩图啊' then
       api.Api_SendMsg(
           CurrentQQ,
            {
              toUser = data.FromGroupId,
              sendToType = 2,
              sendMsgType = "PicMsg",
              content = "30s自动撤回",
              groupid = 0,
              atUser = 0,
              picUrl = "http://116.62.167.164:8080/xxoo",
              picBase64Buf = "",
              fileMd5 = ""
            }
	   )
    end
    return 1
end

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end

2020/09/10 22:30:06.159 [E]  setutnl.lua
2020/09/10 22:30:06.164 [E]  -- pix 动漫图
local api = require("coreApi")
local http = require("http")

local whitelist = { 959562190,
    383770908,
    581168848,
} -- 只有白名单里的群中可以使用色图指令

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '涩图啊' then
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
       api.Api_SendMsg(
           CurrentQQ,
            {
              toUser = data.FromGroupId,
              sendToType = 2,
              sendMsgType = "PicMsg",
              content = "30s自动撤回",
              groupid = 0,
              atUser = 0,
              picUrl = "https://uploadbeta.com/api/pictures/random/?key=%E6%8E%A8%E5%A5%B3%E9%83%8E",
              picBase64Buf = "",
              fileMd5 = ""
            }
       )
    end
    if data.Content == '涩图啊' then
       api.Api_SendMsg(
           CurrentQQ,
            {
              toUser = data.FromGroupId,
              sendToType = 2,
              sendMsgType = "PicMsg",
              content = "30s自动撤回",
              groupid = 0,
              atUser = 0,
              picUrl = "http://116.62.167.164:8080/xxoo",
              picBase64Buf = "",
              fileMd5 = ""
            }
	   )
    end
    return 1
end

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end

2020/09/10 22:31:35.254 [E]  setutnl.lua
2020/09/10 22:31:35.254 [E]  -- pix 动漫图
local api = require("coreApi")
local http = require("http")

local whitelist = { 959562190,
    383770908,
    581168848,
} -- 只有白名单里的群中可以使用色图指令

function ReceiveFriendMsg(CurrentQQ, data)
    return 1
end

function ReceiveGroupMsg(CurrentQQ, data)
    if data.Content == '涩图啊' then
        return 1
    end
    if not contains(whitelist, data.FromGroupId) then
        return 1
    end
       api.Api_SendMsg(
           CurrentQQ,
            {
              toUser = data.FromGroupId,
              sendToType = 2,
              sendMsgType = "PicMsg",
              content = "30s自动撤回",
              groupid = 0,
              atUser = 0,
              picUrl = "https://uploadbeta.com/api/pictures/random/?key=%E6%8E%A8%E5%A5%B3%E9%83%8E",
              picBase64Buf = "",
              fileMd5 = ""
            }
       )
    end
    if data.Content == '涩图啊' then
       api.Api_SendMsg(
           CurrentQQ,
            {
              toUser = data.FromGroupId,
              sendToType = 2,
              sendMsgType = "PicMsg",
              content = "30s自动撤回",
              groupid = 0,
              atUser = 0,
              picUrl = "http://116.62.167.164:8080/xxoo",
              picBase64Buf = "",
              fileMd5 = ""
            }
	   )
    end
    return 1
end

function ReceiveEvents(CurrentQQ, data, extData)
    return 1
end

2020/09/10 22:33:09.132 [E]  QQLuaVmRun CallGlobal err <string>:17: attempt to call a non-function object
stack traceback:
	<string>:17: in main chunk
	[G]: ? detail File setutnl.lua when  call ReceiveGroupMsg params [0] 1689236904  [1] &{959562190 测试群 2450459910 凤飞翱翔兮丷 涩图啊 TextMsg 1599748389 6831 1352184055 <nil>} 
2020/09/10 22:35:13.221 [E]  QQLuaVmRun CallGlobal err <string>:15: attempt to call a non-function object
stack traceback:
	<string>:15: in main chunk
	[G]: ? detail File setutnl.lua when  call ReceiveGroupMsg params [0] 1689236904  [1] &{959562190 测试群 2450459910 凤飞翱翔兮丷 涩图啊 TextMsg 1599748513 6833 93542229 <nil>} 
2020/09/10 22:35:39.541 [E]  QQLuaVmRun CallGlobal err <string>:15: attempt to call a non-function object
stack traceback:
	<string>:15: in main chunk
	[G]: ? detail File setutnl.lua when  call ReceiveGroupMsg params [0] 1689236904  [1] &{959562190 测试群 2450459910 凤飞翱翔兮丷 涩图啊 TextMsg 1599748539 6834 38383062 <nil>} 
2020/09/10 22:36:05.114 [E]  QQLuaVmRun CallGlobal err <string>:15: attempt to call a non-function object
stack traceback:
	<string>:15: in main chunk
	[G]: ? detail File setutnl.lua when  call ReceiveGroupMsg params [0] 1689236904  [1] &{959562190 测试群 2450459910 凤飞翱翔兮丷 涩图啊 TextMsg 1599748564 6835 620762737 <nil>} 
2020/09/10 22:36:05.199 [E]  QQLuaVmRun CallGlobal err <string>:15: attempt to call a non-function object
stack traceback:
	<string>:15: in main chunk
	[G]: ? detail File setutnl.lua when  call ReceiveGroupMsg params [0] 1689236904  [1] &{959562190 测试群 1689236904 凤飞翱翔兮丷 又复读上瘾了啊 TextMsg 1599748565 6836 1599748564 <nil>} 
2020/09/10 23:46:39.856 [E]  QQLuaVmRun CallGlobal err <string>:349: unfinished capture at EOS
stack traceback:
	[G]: in function 'find'
	<string>:349: in main chunk
	[G]: ? detail File mimoio.lua when  call ReceiveGroupMsg params [0] 1689236904  [1] &{928308961 大 洗 女 子 学 园 2741292486 da 七夜本来就是( TextMsg 1599752799 531747 1916997237 <nil>} 
